// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.EntityFramework;

#nullable disable

namespace Projekt.EntityFramework.Migrations
{
    [DbContext(typeof(ProjektDbContex))]
    [Migration("20220606105303_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Projekt.Models.Klienci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nr_telefonu")
                        .HasColumnType("int");

                    b.Property<int>("WypozyczenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WypozyczenieId");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("Projekt.Models.Lista_wypozyczen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Sprzent_sportowyId")
                        .HasColumnType("int");

                    b.Property<int?>("WypozyczalniaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Sprzent_sportowyId");

                    b.HasIndex("WypozyczalniaId");

                    b.ToTable("Lista");
                });

            modelBuilder.Entity("Projekt.Models.Pracownicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nr_telefonu")
                        .HasColumnType("int");

                    b.Property<int>("Pensja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("Projekt.Models.Sprzet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Firma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rodzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sprzet_sportowy");
                });

            modelBuilder.Entity("Projekt.Models.Wypozyczalnia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_wypozyczenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_zwrotu")
                        .HasColumnType("datetime2");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracownikId");

                    b.ToTable("Wypozyczalnia");
                });

            modelBuilder.Entity("Projekt.Models.Klienci", b =>
                {
                    b.HasOne("Projekt.Models.Wypozyczalnia", "Wypozyczenie")
                        .WithMany()
                        .HasForeignKey("WypozyczenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wypozyczenie");
                });

            modelBuilder.Entity("Projekt.Models.Lista_wypozyczen", b =>
                {
                    b.HasOne("Projekt.Models.Sprzet", "Sprzent_sportowy")
                        .WithMany()
                        .HasForeignKey("Sprzent_sportowyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.Models.Wypozyczalnia", null)
                        .WithMany("Lista")
                        .HasForeignKey("WypozyczalniaId");

                    b.Navigation("Sprzent_sportowy");
                });

            modelBuilder.Entity("Projekt.Models.Wypozyczalnia", b =>
                {
                    b.HasOne("Projekt.Models.Pracownicy", "Pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("Projekt.Models.Wypozyczalnia", b =>
                {
                    b.Navigation("Lista");
                });
#pragma warning restore 612, 618
        }
    }
}
